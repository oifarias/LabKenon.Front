{"version":3,"file":"formik-chakra-ui.cjs.development.js","sources":["../src/form-control/index.tsx","../src/form-checkbox/checkbox-container.tsx","../src/form-checkbox/checkbox-control.tsx","../src/form-checkbox/checkbox-single.tsx","../src/input-control/index.tsx","../src/number-input-control/index.tsx","../src/percent-complete/index.tsx","../src/radio-group-control/index.tsx","../src/reset-button/index.tsx","../src/select-control/index.tsx","../src/submit-button/index.tsx","../src/switch-control/index.tsx","../src/textarea-control/index.tsx","../src/slider-control/index.tsx","../src/pin-input-control/index.tsx"],"sourcesContent":["import {\n  FormControl as ChakraFormControl,\n  FormControlProps,\n  FormErrorMessage,\n  FormErrorMessageProps,\n  FormHelperText,\n  FormLabel,\n  FormLabelProps,\n  HelpTextProps,\n} from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React, { FC } from 'react';\n\nexport interface BaseProps extends FormControlProps {\n  name: string;\n  label?: string;\n  labelProps?: FormLabelProps;\n  helperText?: string;\n  helperTextProps?: HelpTextProps;\n  errorMessageProps?: FormErrorMessageProps;\n}\n\nexport const FormControl: FC<BaseProps> = (props: BaseProps) => {\n  const {\n    children,\n    name,\n    label,\n    labelProps,\n    helperText,\n    helperTextProps,\n    errorMessageProps,\n    ...rest\n  } = props;\n  const [, { error, touched }] = useField(name);\n\n  return (\n    <ChakraFormControl isInvalid={!!error && touched} {...rest}>\n      {label && (\n        <FormLabel htmlFor={name} {...labelProps}>\n          {label}\n        </FormLabel>\n      )}\n      {children}\n      {error && (\n        <FormErrorMessage {...errorMessageProps}>{error}</FormErrorMessage>\n      )}\n      {helperText && (\n        <FormHelperText {...helperTextProps}>{helperText}</FormHelperText>\n      )}\n    </ChakraFormControl>\n  );\n};\n\nexport default FormControl;\n","import { Stack, StackProps } from '@chakra-ui/react';\nimport React, { FC, ReactNode } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type CheckboxContainerProps = BaseProps & {\n  stackProps?: StackProps;\n  children: ReactNode;\n};\n\nexport const CheckboxContainer: FC<CheckboxContainerProps> = (\n  props: CheckboxContainerProps\n) => {\n  const { name, label, children, stackProps, ...rest } = props;\n\n  return (\n    <FormControl name={name} label={label} {...rest}>\n      <Stack pl={6} mt={1} spacing={1} {...stackProps}>\n        {children}\n      </Stack>\n    </FormControl>\n  );\n};\n\nexport default CheckboxContainer;\n","import { Checkbox, CheckboxProps } from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React, { FC } from 'react';\n\ntype Overwrite<T, U> = Pick<T, Exclude<keyof T, keyof U>> & U;\n\nexport type CheckboxControlProps = Overwrite<\n  CheckboxProps,\n  { value: string | number }\n> & { name: string; label?: string };\n\nexport const CheckboxControl: FC<CheckboxControlProps> = React.forwardRef(\n  (props: CheckboxControlProps, ref: React.ForwardedRef<HTMLInputElement>) => {\n    const { name, label, children, ...rest } = props;\n    const [field, { error, touched }] = useField(name);\n    let isChecked;\n    if (field.value instanceof Array) {\n      isChecked = field.value.includes(props.value) ?? false;\n    }\n\n    return (\n      <Checkbox\n        {...field}\n        isInvalid={!!error && touched}\n        isChecked={isChecked}\n        ref={ref}\n        {...rest}\n      >\n        {label}\n        {children}\n      </Checkbox>\n    );\n  }\n);\n\nexport default CheckboxControl;\n","import { Checkbox, CheckboxProps } from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React, { FC } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type CheckboxSingleProps = BaseProps & {\n  checkBoxProps?: CheckboxProps;\n  children?: React.ReactNode;\n};\n\nexport const CheckboxSingleControl: FC<CheckboxSingleProps> = React.forwardRef(\n  (props: CheckboxSingleProps, ref: React.ForwardedRef<HTMLInputElement>) => {\n    const { name, label, children, checkBoxProps, ...rest } = props;\n    const [field, { error, touched }] = useField(name);\n    const isChecked = field.value;\n\n    return (\n      <FormControl name={name} {...rest}>\n        <Checkbox\n          {...field}\n          id={name}\n          isInvalid={!!error && touched}\n          isChecked={isChecked}\n          ref={ref}\n          {...checkBoxProps}\n        >\n          {label}\n          {children}\n        </Checkbox>\n      </FormControl>\n    );\n  }\n);\n","import { Input, InputProps } from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React, { FC, ForwardedRef } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type InputControlProps = BaseProps & { inputProps?: InputProps };\n\nexport const InputControl: FC<InputControlProps> = React.forwardRef(\n  (props: InputControlProps, ref: ForwardedRef<HTMLInputElement>) => {\n    const { name, label, inputProps, ...rest } = props;\n    const [field] = useField(name);\n\n    return (\n      <FormControl name={name} label={label} {...rest}>\n        <Input {...field} id={name} {...inputProps} ref={ref} />\n      </FormControl>\n    );\n  }\n);\n\nexport default InputControl;\n","import {\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputProps,\n  NumberInputStepper,\n} from '@chakra-ui/react';\nimport { useField, useFormikContext } from 'formik';\nimport React, { FC } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type NumberInputControlProps = BaseProps & {\n  numberInputProps?: NumberInputProps;\n  showStepper?: boolean;\n  children?: React.ReactNode;\n};\n\nexport const NumberInputControl: FC<NumberInputControlProps> = React.forwardRef(\n  (\n    props: NumberInputControlProps,\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const {\n      name,\n      label,\n      showStepper = true,\n      children,\n      numberInputProps,\n      ...rest\n    } = props;\n    const [field, { error, touched }] = useField(name);\n    const { setFieldValue } = useFormikContext();\n\n    const $setFieldValue = (name: string) => (value: any) =>\n      setFieldValue(name, value);\n\n    return (\n      <FormControl name={name} label={label} {...rest}>\n        <NumberInput\n          {...field}\n          id={name}\n          onChange={$setFieldValue(name)}\n          isInvalid={!!error && touched}\n          {...numberInputProps}\n        >\n          <NumberInputField name={name} ref={ref} />\n          {showStepper && (\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          )}\n          {children}\n        </NumberInput>\n      </FormControl>\n    );\n  }\n);\n\nexport default NumberInputControl;\n","import { Box, BoxProps, Progress, ProgressProps } from '@chakra-ui/react';\nimport { useFormikContext } from 'formik';\nimport React, { FC, useEffect } from 'react';\n\ntype ProgressFn = (numFields: number, numerrors: number) => any;\n\nconst calculateProgress: ProgressFn = (numFields, numErrors) => {\n  const validFields = numFields - numErrors;\n  return (validFields / numFields) * 100;\n};\n\nexport type PercentCompleteProps = {\n  progressProps?: ProgressProps;\n  progressFn?: ProgressFn;\n} & BoxProps;\n\nexport const PercentComplete: FC<PercentCompleteProps> = (\n  props: PercentCompleteProps\n) => {\n  const { progressFn = calculateProgress, progressProps, ...rest } = props;\n  const { errors, values, validateForm, dirty } = useFormikContext();\n  const numFields = Object.keys(values as object).length;\n  const numErrors = Object.keys(errors).length;\n\n  useEffect(() => {\n    validateForm();\n  }, [dirty]);\n\n  return (\n    <Box marginY={5} {...rest}>\n      <Progress\n        hasStripe\n        isAnimated\n        value={progressFn(numFields, numErrors)}\n        {...progressProps}\n      />\n    </Box>\n  );\n};\n\nexport default PercentComplete;\n","import {\n  RadioGroup,\n  RadioGroupProps,\n  Stack,\n  StackProps,\n} from '@chakra-ui/react';\nimport { useField, useFormikContext } from 'formik';\nimport React, { FC, ReactNode } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type RadioGroupControlProps = BaseProps & {\n  radioGroupProps?: RadioGroupProps;\n  stackProps?: StackProps;\n  children: ReactNode;\n};\n\nexport const RadioGroupControl: FC<RadioGroupControlProps> = (\n  props: RadioGroupControlProps\n) => {\n  const { name, label, radioGroupProps, stackProps, children, ...rest } = props;\n  const [field] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const handleChange = (value: string) => {\n    setFieldValue(name, value);\n  };\n\n  return (\n    <FormControl name={name} label={label} {...rest}>\n      <RadioGroup {...field} onChange={handleChange} {...radioGroupProps}>\n        <Stack direction=\"row\" {...stackProps}>\n          {children}\n        </Stack>\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default RadioGroupControl;\n","import { Button, ButtonProps } from '@chakra-ui/react';\nimport { useFormikContext } from 'formik';\nimport React, { FC } from 'react';\n\nexport type ResetButtonProps = ButtonProps;\n\nexport const ResetButton: FC<ResetButtonProps> = (props: ResetButtonProps) => {\n  const { children, ...rest } = props;\n  const { isSubmitting, dirty, resetForm } = useFormikContext();\n\n  return (\n    <Button\n      colorScheme=\"teal\"\n      variant=\"outline\"\n      onClick={() => resetForm()}\n      isDisabled={isSubmitting || !dirty}\n      {...rest}\n    >\n      {/* TODO: This is not needed. */}\n      {children}\n    </Button>\n  );\n};\n\nexport default ResetButton;\n","import { Select, SelectProps } from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React, { FC } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type SelectControlProps = BaseProps & {\n  selectProps?: SelectProps;\n  children: React.ReactNode;\n};\n\nexport const SelectControl: FC<SelectControlProps> = React.forwardRef(\n  (props: SelectControlProps, ref: React.ForwardedRef<HTMLSelectElement>) => {\n    const { name, label, selectProps, children, ...rest } = props;\n    const [field] = useField(name);\n\n    return (\n      <FormControl name={name} label={label} {...rest}>\n        <Select {...field} id={name} ref={ref} {...selectProps}>\n          {children}\n        </Select>\n      </FormControl>\n    );\n  }\n);\n\nexport default SelectControl;\n","import { Button, ButtonProps } from '@chakra-ui/react';\nimport { useFormikContext } from 'formik';\nimport React, { FC } from 'react';\n\nexport type SubmitButtonProps = ButtonProps;\n\nexport const SubmitButton: FC<SubmitButtonProps> = (\n  props: SubmitButtonProps\n) => {\n  const { children, ...rest } = props;\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <Button type=\"submit\" isLoading={isSubmitting} colorScheme=\"teal\" {...rest}>\n      {children}\n    </Button>\n  );\n};\n\nexport default SubmitButton;\n","import { Box, Flex, Switch, SwitchProps } from '@chakra-ui/react';\nimport { css } from '@emotion/react';\nimport { useField } from 'formik';\nimport React, { FC } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type SwitchControlProps = BaseProps & { switchProps?: SwitchProps };\n\nexport const SwitchControl: FC<SwitchControlProps> = React.forwardRef(\n  (props: SwitchControlProps, ref: React.ForwardedRef<HTMLInputElement>) => {\n    const { name, label, switchProps, ...rest } = props;\n    const [field, { error, touched }] = useField(name);\n\n    return (\n      <Box\n        css={css`\n          .chakra-form__label {\n            margin-bottom: 0;\n          }\n          .chakra-switch {\n            display: flex;\n            align-items: center;\n            margin-right: 0.75rem;\n          }\n          .chakra-form__error-message {\n            margin-top: 0;\n          }\n        `}\n      >\n        <FormControl\n          name={name}\n          label={label}\n          as={Flex}\n          alignItems=\"center\"\n          {...rest}\n        >\n          <Switch\n            {...field}\n            id={name}\n            isInvalid={!!error && touched}\n            isChecked={field.value}\n            ref={ref}\n            {...switchProps}\n          />\n        </FormControl>\n      </Box>\n    );\n  }\n);\n\nexport default SwitchControl;\n","import { Textarea, TextareaProps } from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React, { FC } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type TextareaControlProps = BaseProps & {\n  textareaProps?: TextareaProps;\n};\n\nexport const TextareaControl: FC<TextareaControlProps> = React.forwardRef(\n  (\n    props: TextareaControlProps,\n    ref: React.ForwardedRef<HTMLTextAreaElement>\n  ) => {\n    const { name, label, textareaProps, ...rest } = props;\n    const [field] = useField(name);\n\n    return (\n      <FormControl name={name} label={label} {...rest}>\n        <Textarea {...field} id={name} ref={ref} {...textareaProps} />\n      </FormControl>\n    );\n  }\n);\n\nexport default TextareaControl;\n","import {\n  Slider,\n  SliderFilledTrack,\n  SliderProps,\n  SliderThumb,\n  SliderThumbProps,\n  SliderTrack,\n  SliderTrackProps,\n} from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React, { FC } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type SliderControlProps = BaseProps & {\n  sliderProps?: SliderProps;\n  sliderTrackProps?: SliderTrackProps;\n  sliderThumbProps?: SliderThumbProps;\n};\n\nexport const SliderControl: FC<SliderControlProps> = (\n  props: SliderControlProps\n) => {\n  const {\n    name,\n    label,\n    sliderProps,\n    sliderTrackProps,\n    sliderThumbProps,\n    ...rest\n  } = props;\n  const [field, , { setValue }] = useField(name);\n  function handleChange(value: number) {\n    setValue(value);\n  }\n  // Does not behave like expected, so we manually handle it.\n  function handleBlur(e: React.FocusEvent<HTMLDivElement>) {\n    (e.target as any).name = name;\n    field.onBlur(e);\n  }\n\n  return (\n    <FormControl name={name} label={label} {...rest}>\n      <Slider\n        {...field}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        {...sliderProps}\n      >\n        <SliderTrack {...sliderTrackProps}>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb {...sliderThumbProps} />\n      </Slider>\n    </FormControl>\n  );\n};\n\nexport default SliderControl;\n","import {\n  HStack,\n  PinInput,\n  PinInputField,\n  PinInputProps,\n  StackProps,\n} from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React, { FC } from 'react';\nimport { BaseProps, FormControl } from '../form-control';\n\nexport type PinInputControlProps = BaseProps & {\n  pinAmount: number;\n  stackProps?: StackProps;\n  pinInputProps?: Omit<PinInputProps, 'children'>;\n};\n\nexport const PinInputControl: FC<PinInputControlProps> = (\n  props: PinInputControlProps\n) => {\n  const { name, label, pinAmount, stackProps, pinInputProps, ...rest } = props;\n  const [field, , { setValue }] = useField(name);\n  const renderedPinInputFields = Array(pinAmount).fill(null).map((_noop, i) => (\n    <PinInputField key={i} />\n  ));\n  function handleChange(value: string) {\n    setValue(value);\n  }\n\n  return (\n    <FormControl name={name} label={label} {...rest}>\n      <HStack {...stackProps}>\n        <PinInput {...field} onChange={handleChange} {...pinInputProps}>\n          {renderedPinInputFields}\n        </PinInput>\n      </HStack>\n    </FormControl>\n  );\n};\n\nexport default PinInputControl;\n"],"names":["FormControl","props","children","name","label","labelProps","helperText","helperTextProps","errorMessageProps","rest","useField","error","touched","React","ChakraFormControl","isInvalid","FormLabel","htmlFor","FormErrorMessage","FormHelperText","CheckboxContainer","stackProps","Stack","pl","mt","spacing","CheckboxControl","forwardRef","ref","field","isChecked","value","Array","includes","Checkbox","CheckboxSingleControl","checkBoxProps","id","InputControl","inputProps","Input","NumberInputControl","showStepper","numberInputProps","useFormikContext","setFieldValue","$setFieldValue","NumberInput","onChange","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","calculateProgress","numFields","numErrors","validFields","PercentComplete","progressFn","progressProps","errors","values","validateForm","dirty","Object","keys","length","useEffect","Box","marginY","Progress","hasStripe","isAnimated","RadioGroupControl","radioGroupProps","handleChange","RadioGroup","direction","ResetButton","isSubmitting","resetForm","Button","colorScheme","variant","onClick","isDisabled","SelectControl","selectProps","Select","SubmitButton","type","isLoading","SwitchControl","switchProps","css","as","Flex","alignItems","Switch","TextareaControl","textareaProps","Textarea","SliderControl","sliderProps","sliderTrackProps","sliderThumbProps","setValue","handleBlur","e","target","onBlur","Slider","SliderTrack","SliderFilledTrack","SliderThumb","PinInputControl","pinAmount","pinInputProps","renderedPinInputFields","fill","map","_noop","i","PinInputField","key","HStack","PinInput"],"mappings":"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"}